#include <iostream>

using namespace std;


/**
 * Функция нахождения последнего вхождения целого числа в отсортированном 
 * массиве (бинарный поиск).
 *
 * Параметры:
 *  `arr`  : int_ptr    -- указатель на массив целых чисел;
 *  `size` : int        -- размер массива;
 *  `elem` : int        -- искомое значение
 * 
 * Возвращаемое значение:
 *         : int        -- индекс последнего вхождения, если элемент со 
 *                         значением `elem` содержится в массиве, 
 *                         иначе -- `-1`.
 */
int upper_bound(int* arr, int size, int elem) {
    
    // Поиск осуществляется по полуинтервалу [left, right):
    int left = 0;       // - левая граница полуинтервала;
    int right = size;   // - правая граница полуинтервала.

    // Пока в полуинтервале содержится более одного элемента,
    while (right - left > 1) {
        // выбираем его середину,
        int middle = (right + left) / 2;
        // и в случае, если центральный элемент не превосходит искомого,
        if (arr[middle] <= elem) {
            // сдвигаем левую границу,
            left = middle;
        }
        else {
            // иначе -- правую.
            right = middle;
        }
    }

    // Если в результате бинарного поиска выбранный элемент совпадает значением
    // с искомым, то возвращаем индекс, иначе -- `-1`.
    return arr[left] == elem ? left : -1;
}


int main() {

    int* arr;

    int n;
    cin >> n;

    arr = new int[n];
    for (int i = 0; i < n; i++) {
        cin >> arr[i];
    }

    int elem;
    cin >> elem;

    cout << upper_bound(arr, n, elem) << endl;

    delete[] arr;

    return 0;
}